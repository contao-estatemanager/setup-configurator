<div id="tl_buttons">
    <a href="<?= ampersand($this->backUrl) ?>" class="header_back" title="<?= Contao\StringUtil::specialchars($this->backBTTitle) ?>" accesskey="b"><?= $this->backBT ?></a>
</div>
<div class="re_configuratior">
    <form class="tl_form" method="post">
        <div class="tl_formbody_edit">
            <input type="hidden" name="FORM_SUBMIT" value="tl_configurator">
            <input type="hidden" name="REQUEST_TOKEN" value="<?= REQUEST_TOKEN ?>">

            <p class="info"><?= $this->description ?></p>

            <div class="em_module_box">
                <div<?=$this->isActive ? ' class="disabled"' : ''?> id="group_hint"><?=$this->groupHint?></div>
                <?= $this->content ?>
            </div>
        </div>

        <div class="tl_submit_container">
            <button type="submit" name="submit" class="tl_submit"><?=$this->submit?></button>
        </div>
    </form>
</div>

<script>
    if(!!document.querySelector('.em-header input[type="checkbox"]')) {
        var groups = document.querySelectorAll('.em-header input[type="checkbox"]');

        for(var i=0; i < groups.length; i++)
        {
            var groupWrapper = groups[i].parentNode.parentNode;
            var groupInputs = groupWrapper.querySelectorAll('.em-content input');

            for(var j=0; j < groupInputs.length; j++){
                groupInputs[j].parentToggle = groupWrapper;
                groupInputs[j].addEventListener('change', function(){
                    var input = this.parentToggle.querySelector('.em-header input[type="checkbox"]');
                    var type = this.type.toLowerCase();

                    if((type !== 'checkbox' && !!this.value) || (type === 'checkbox' && !!this.checked))
                    {
                        input.checked=true;

                        var evt = document.createEvent("HTMLEvents");
                        evt.initEvent("change", false, true);

                        this.parentToggle.querySelector('.em-header input[type="checkbox"]').dispatchEvent(evt);
                    }
                })
            }
        }
    }
</script>
